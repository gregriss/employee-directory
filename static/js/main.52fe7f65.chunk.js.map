{"version":3,"sources":["person-icon.svg","components/header/index.js","components/employeeList/index.js","components/searchForm/index.js","utils/api.js","components/container/index.js","App.js","reportWebVitals.js","index.js"],"names":["headerStyles","backgroundColor","display","justifyContent","alignItems","padding","fontSize","color","boxShadow","Header","className","style","src","person","alt","listStyles","ul","margin","gridTemplateColumns","gap","li","listStyle","imageStyles","marginTop","spanStyles","xSpan","textAlign","fontWeight","cursor","tooltip","visibility","EmployeeList","props","results","map","result","id","phone","onClick","handleRemove","cell","onMouseEnter","handleHover","name","first","last","picture","medium","email","nat","location","city","country","SearchForm","htmlFor","onChange","handleInputChange","value","search","type","placeholder","handleFormSubmit","randomUsers","query","axios","get","Container","state","searchRandomUsers","then","res","console","log","data","setState","catch","err","event","target","key","document","getElementById","setAttribute","filter","preventDefault","user","firstName","lastName","fullName","userGender","gender","userCell","userEmail","userCity","userCountry","userLocation","includes","handleSort1Level","asc","employeeSorted","sort","a","b","handleSort2Levels","key1","key2","this","handleSort","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.52fe7f65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/person-icon.07c6e769.svg\";","import React from 'react';\r\nimport person from '../../person-icon.svg';\r\nimport '../../App.css';\r\n\r\nconst headerStyles = {\r\n    backgroundColor: '#282c34',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    padding: '0.5rem 3rem',\r\n    fontSize: 'calc(10px + 1vmin)',\r\n    color: 'white',\r\n    boxShadow: 'inset -5px 1px 15px 5px #1b1e22'\r\n}\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"App\">\r\n                <header style={headerStyles} className=\"App-header\">\r\n                    <h1>\r\n                        Employee Directory\r\n                    </h1>\r\n                    <img src={person} className=\"App-logo\" alt=\"logo\" />\r\n                </header>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n// import EmployeeCard from \"../employeeCard\";\r\n\r\nconst listStyles = {\r\n  ul: {\r\n    margin: \"2rem\",\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fit, minmax(300px, 1fr)\",\r\n    gap: \"2rem\"\r\n  },\r\n\r\n  li: {\r\n    listStyle: \"none\",\r\n    padding: \"0.5rem 1rem\",\r\n    boxShadow: \"1px 1px 10px 2px #808080\"\r\n  }\r\n}\r\n\r\nconst imageStyles = {\r\n  display: 'inline',\r\n  marginTop: '-35px'\r\n}\r\n\r\nconst spanStyles = {\r\n  xSpan: {\r\n    display: 'grid',\r\n    textAlign: 'right',\r\n    color: '#ea4343',\r\n    fontSize: '36px',\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer'\r\n  },\r\n\r\n  tooltip: {\r\n    visibility: 'hidden'\r\n  }\r\n}\r\n\r\nfunction EmployeeList(props) {\r\n  return (\r\n    <ul style={listStyles.ul} className=\"list-group\">\r\n      {props.results.map(result => (\r\n        <li style={listStyles.li} className=\"list-group-item\" key={result.cell}>\r\n          <span id={`${result.phone}`} key={result.phone} style={spanStyles.tooltip} className=\"tooltip-text\">Remove</span>\r\n          <span style={spanStyles.xSpan} className=\"remove\" onClick={() => props.handleRemove(result.cell)} onMouseEnter={() => props.handleHover(result.phone)} >X</span>\r\n          <img style={imageStyles} alt={result.name.first.last} className=\"img-fluid\" src={result.picture.medium} />\r\n          <p style={{ fontSize: '120%' }}><strong>{result.name.first} {result.name.last}</strong></p>\r\n          <p><strong>Cell: </strong> {result.cell}</p>\r\n          <p><strong>Email: </strong> {result.email}</p>\r\n          <p><strong>Nationality: </strong>{result.nat}</p>\r\n          <p><strong>Location: </strong> {result.location.city}, {result.location.country}</p>\r\n        </li>\r\n      ))\r\n      }\r\n    </ul >\r\n  );\r\n}\r\n\r\nexport default EmployeeList;","import React from 'react';\r\nimport './style.css';\r\n\r\nfunction SearchForm(props) {\r\n    return (\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"search\">Search:</label>\r\n          <input\r\n            onChange={props.handleInputChange}\r\n            value={props.search}\r\n            name=\"search\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Search for Employees\"\r\n            id=\"search\"\r\n          />\r\n          <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\r\n            Search\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n  \r\n  export default SearchForm;","import axios from 'axios';\r\n\r\nconst URL = 'https://randomuser.me/api/';\r\n\r\nconst randomUsers = {\r\n    search: (query) => {\r\n        return axios.get(URL + query);\r\n    }\r\n}\r\n\r\nexport default randomUsers;\r\n","import React, { Component } from \"react\";\r\nimport EmployeeList from '../employeeList';\r\n// import EmployeeCard from '../employeeCard';\r\n// import Sort from '../sortParams';\r\nimport SearchForm from '../searchForm';\r\nimport randomUsers from \"../../utils/api\";\r\nimport \"./style.css\";\r\n\r\nclass Container extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: []\r\n  };\r\n\r\n  // When this component mounts, search the random user API\r\n  componentDidMount() {\r\n    this.searchRandomUsers(\"?results=24\");\r\n  }\r\n\r\n  searchRandomUsers = query => {\r\n    randomUsers.search(query)\r\n      .then(res => {\r\n        console.log(res.data.results);\r\n        this.setState({ results: res.data.results })\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  handleInputChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    // console.log(name, value);\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n    // console.log(value);\r\n  };\r\n\r\n  handleHover = key => {\r\n    // console.log(key);\r\n    if (this.state.results.phone === key.value) {\r\n      document.getElementById(key).setAttribute('visibility', 'visible')\r\n      // alert(key)\r\n    }\r\n  }\r\n\r\n  // function to remove an individual employee\r\n  handleRemove = id => {\r\n    this.setState({\r\n      results: this.state.results.filter(result => result.cell !== id)\r\n    });\r\n  }\r\n\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    let state = this.state.search;\r\n    // was let user\r\n    // let result = {\r\n    //   firstName: `${user.name.first}`,\r\n    //   lastName: `${user.name.last}`,\r\n    //   fullName: `${user.name.first} ${user.name.last}`,\r\n    //   userCell: `${user.cell}`,\r\n    //   userEmail: `${result.email}`,\r\n    //   userCity: `${result.location.city}`,\r\n    //   userCountry: `${result.location.country}`\r\n    // }\r\n\r\n    // filter employees to match parameter of the search term\r\n    const results = this.state.results.filter(user => {\r\n      let firstName = `${user.name.first}`;\r\n      let lastName = `${user.name.last}`;\r\n      let fullName = `${user.name.first} ${user.name.last}`;\r\n      let userGender = `${user.gender}`;\r\n      let userCell = `${user.cell}`;\r\n      let userEmail = `${user.email}`;\r\n      let userCity = `${user.location.city}`;\r\n      let userCountry = `${user.location.country}`;\r\n      let userLocation = `${user.location.city}, ${user.location.country}`;\r\n\r\n      if (firstName === state || lastName === state || fullName === state || userGender === state || userCell === state || userEmail === state || userCity === state || userCountry === state || userLocation === state) {\r\n        console.log(state);\r\n        return true;\r\n      }\r\n      else if (this.state.results.includes(this.state.search)) {\r\n        console.log(results)\r\n        return true;\r\n      }\r\n      // else {\r\n      //   alert('Not found');\r\n      //   return;\r\n      // }\r\n    })\r\n    this.setState({ results: results })\r\n    return;\r\n  };\r\n  // function to sort 1 level down the DOM tree\r\n  handleSort1Level = (key, asc) => {\r\n    // Copy the array into new array\r\n    let employeeSorted = [...this.state.results];\r\n    // sort by key, and ascending\r\n    employeeSorted.sort((a, b) => {\r\n      return a[key] > b[key] ? asc * 1 : asc * -1;\r\n    })\r\n    // set the state\r\n    this.setState({ results: employeeSorted })\r\n    console.log(employeeSorted);\r\n  }\r\n\r\n  // function to sort 2 levels down the DOM tree\r\n  handleSort2Levels = (key1, key2, asc) => {\r\n    // Copy the array to a new array\r\n    let employeeSorted = [...this.state.results];\r\n    // sort by key, and ascending\r\n    employeeSorted.sort((a, b) => {\r\n      return a[key1][key2] > b[key1][key2] ? asc * 1 : asc * -1;\r\n    })\r\n    // set the state\r\n    this.setState({ results: employeeSorted })\r\n    console.log(employeeSorted);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-div\">\r\n        <h2>Search</h2>\r\n        <h3>Filter/Find an Employee by their First Name, Last Name, Full Name, gender (male or female), Cell #, Email, City, Country, or [City, Country]</h3>\r\n        <SearchForm\r\n          search={this.state.search}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <section className=\"buttons-container\">\r\n          <h3>Or Sort Alphabetically By:</h3>\r\n          <button onClick={() => this.handleSort2Levels('name', 'first', 1)}>First Name</button>\r\n          <button onClick={() => this.handleSort2Levels('name', 'last', 1)}>Last Name</button>\r\n          <button onClick={() => this.handleSort1Level('email', 1)}>Email</button>\r\n          <button onClick={() => this.handleSort1Level('email', -1)}>Email Reversed</button>\r\n          <button onClick={() => this.handleSort1Level('nat', 1)}>Nationality</button>\r\n          <button onClick={() => this.handleSort1Level('nat', -1)}>Nationality Reversed</button>\r\n          <button onClick={() => this.handleSort2Levels('location', 'city', 1)}>City</button>\r\n        </section>\r\n        <EmployeeList\r\n          results={this.state.results}\r\n          handleSort={this.handleSort}\r\n          handleHover={this.handleHover}\r\n          handleRemove={this.handleRemove}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Container;","import React from 'react';\n// import logo from './logo.svg';\n\nimport './App.css';\nimport Header from './components/header';\nimport Container from './components/container';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Container />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}